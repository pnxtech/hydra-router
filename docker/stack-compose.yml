version: "3.4"

networks:
  servicenet:
    driver: overlay
    ipam:
      config:
        -
          subnet: 10.0.9.0/24

configs:
  hydra_config:
    file: ../config/config.json

services:

  visualizer:
    image: dockersamples/visualizer:stable
    networks:
      - servicenet
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: ingress
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      replicas: 1

  redis:
    image: redis:4.0.8-alpine
    networks:
      servicenet:
        aliases:
          - redis
    ports:
      - target: 6379
        published: 6379
        protocol: tcp
        mode: ingress
    volumes:
      - "~/data/${SWARM_NAME}:/data"
    deploy:
      replicas: 1

  hydra-router:
    image: flywheelsports/hydra-router:1.6.7
    depends_on:
      - redis
      - elasticsearch
    networks:
      - servicenet
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
    configs:
      - source: hydra_config
        target: /usr/src/app/config/config.json
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 6
      resources:
        limits:
          memory: 256M

  hmr-svcs:
    image: flywheelsports/hmr-svcs:1.0.0
    depends_on:
      - redis
      - neo4j
      - elasticsearch
    networks:
      servicenet:
        aliases:
          - hmr-svcs
    extra_hosts:
      - "host:${HOST_IP}"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 6
      resources:
        limits:
          memory: 128M
